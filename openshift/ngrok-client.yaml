apiVersion: v1
kind: Template
metadata:
  name: ngrok-client
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ngrok-client-${NGROK_SUBDOMAIN}
    name: ngrok-client-${NGROK_SUBDOMAIN}
  spec:
    replicas: 1
    selector:
      app: ngrok-client-${NGROK_SUBDOMAIN}
      deploymentconfig: ngrok-client-${NGROK_SUBDOMAIN}
    template:
      metadata:
        labels:
          app: ngrok-client-${NGROK_SUBDOMAIN}
          deploymentconfig: ngrok-client-${NGROK_SUBDOMAIN}
      spec:
        containers:
        - env:
          - name: NGROK_RUN_AS
            value: client
          - name: NGROK_SUBDOMAIN
            value: ${NGROK_SUBDOMAIN}
          - name: NGROK_PROXY_TO
            value: ${NGROK_PROXY_TO}
          - name: NGROK_USER_DEFAULT
            value: ${NGROK_USE_DEFAULT}
          image: quay.io/vpavlin/ngrok-openshift:latest
          imagePullPolicy: Always
          name: ngrok-client-${NGROK_SUBDOMAIN}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ngrok-client-${NGROK_SUBDOMAIN}
    name: ngrok-client-${NGROK_SUBDOMAIN}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ngrok-client-${NGROK_SUBDOMAIN}
      deploymentconfig: ngrok-client-${NGROK_SUBDOMAIN}
    sessionAffinity: None
    type: ClusterIP
parameters:
- name: NGROK_SUBDOMAIN
  value: ""
- name: NGROK_PROXY_TO
  value: https://openshift.default.svc.cluster.local
- name: NGROK_USE_DEFAULT
  value: "true"